version: '3'

services:

  pgdb:
    image: postgres
    container_name: postgres-container
    restart: unless-stopped
    expose:
      - "5432"
    volumes:
      - ./data/pg-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${PG_PASSWORD:-postgres}
      POSTGRES_DB: ${PG_DB:-pgdb}
    networks:
      innerdb:
        aliases:
          - pgdb
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 180s
      timeout: 20s
      retries: 3
      start_period: 60s

  keydb:
    image: eqalpha/keydb:latest
    container_name: keydb-container
    restart: unless-stopped
    privileged: true
    expose:
      - "6379"
    volumes:
      - ./conf/keydb_conf/keydb.conf:/etc/keydb/keydb.conf
      - ./data/keydb-data:/data
    command: keydb-server --requirepass ${KEYDB_PASSWORD:-keypassword}
    networks:
      innerdb:
        aliases:
          - keydb
    healthcheck:
      test: ["CMD", "keydb-cli", "-a", "${KEYDB_PASSWORD:-keypassword}", "ping"]
      interval: 180s
      timeout: 20s
      retries: 3
      start_period: 60s

  pulsar:
    image: apachepulsar/pulsar:2.8.1
    container_name: pulsar-container
    restart: unless-stopped
    expose:
      - "8080"
      - "6650"
    volumes:
      - ./data/pulsardata:/pulsar/data
    # - ./conf/pulsarconf:/pulsar/conf
    command: bin/pulsar standalone
    networks:
      messagequeue:
        aliases:
          - pulsar
    healthcheck:
      test: ["CMD-SHELL", "curl -I http://localhost:8080/admin/v2/namespaces/public/default | grep '200' || exit 1"]
      interval: 180s
      timeout: 20s
      retries: 3
      start_period: 60s

  minio:
    image: quay.io/minio/minio
    container_name: minio-container
    restart: unless-stopped
    expose:
      - "9000"
      - "9001"
    volumes:
      - ./data/minio-data:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_USER:-minio}
      MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD:-miniopassword}
    command: server /data --console-address ":9001"
    networks:
      miniostorage:
        aliases:
          - minio
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 180s
      timeout: 20s
      retries: 3
      start_period: 60s

  typesense:
    image: typesense/typesense:0.22.1
    container_name: typesense-container
    restart: unless-stopped
    expose:
      - "8108"
    volumes:
      - ./data/typesense-data:/data
    environment:
      TYPESENSE_API_KEY: ${TYPESENSE_API_KEY:-8Dz4jRrsBjYgdCD/VGP1bleph7oBThJr5IcF43l0U24=}
      TYPESENSE_DATA_DIR: "/data"
    networks:
      messagequeue:
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8108/health"]
      interval: 180s
      timeout: 20s
      retries: 3
      start_period: 60s

networks:
  innerdb:
    name: innerdb
  messagequeue:
    name: messagequeue
  miniostorage:
    name: miniostorage
