//! SeaORM Entity. Generated by sea-orm-codegen 0.4.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "user")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub uid: i64,
    #[sea_orm(column_type = "Text")]
    pub username: String,
    #[sea_orm(column_type = "Text")]
    pub password: String,
    #[sea_orm(column_type = "Text")]
    pub email: String,
    pub create_time: DateTimeWithTimeZone,
    #[sea_orm(column_type = "Text")]
    pub salt: String,
}

// #[derive(Copy, Clone, Debug, EnumIter)]
// pub enum Relation {}

// impl RelationTrait for Relation {
//     fn def(&self) -> RelationDef {
//         panic!("No RelationDef")
//     }
// }

// impl Related<super::burrow::Entity> for Entity {
//     fn to() -> RelationDef {
//         super::user_follow::Relation::Burrow.def()
//     }

//     fn via() -> Option<RelationDef> {
//         Some(super::user_follow::Relation::User.def().rev())
//     }
// }

#[derive(Copy, Clone, Debug, EnumIter)]
pub enum Relation {}

impl RelationTrait for Relation {
    fn def(&self) -> RelationDef {
        panic!("No RelationDef")
    }
}

impl ActiveModelBehavior for ActiveModel {}
