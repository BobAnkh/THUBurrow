//! SeaORM Entity. Generated by sea-orm-codegen 0.4.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "burrow")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = true)]
    pub id: i64,
    #[sea_orm(column_type = "Text", nullable)]
    pub description: Option<String>,
    #[sea_orm(column_type = "Text")]
    pub title: String,
    pub author: i64,
    pub status: i16,
}

#[derive(Copy, Clone, Debug, EnumIter)]
pub enum Relation {}

impl RelationTrait for Relation {
    fn def(&self) -> RelationDef {
        panic!("No RelationDef")
    }
}

impl Related<super::user::Entity> for Entity {
    fn to() -> RelationDef {
        super::user_follow::Relation::User.def()
    }

    fn via() -> Option<RelationDef> {
        Some(super::user_follow::Relation::Burrow.def().rev())
    }
}

impl ActiveModelBehavior for ActiveModel {}
