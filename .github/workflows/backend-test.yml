name: Cargo Test

on:
  push:
    branches:
      - main
      - dev
      - backend
  pull_request:
      types: [ready_for_review, opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  cargo-integration-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly-2021-11-18
            override: true
            components: rustfmt, clippy
      - name: deal with rust cache
        uses: Swatinem/rust-cache@v1
        with:
          working-directory: backend
      - name: Add containers
        run: docker-compose -f docker-compose-dev.yml up -d
      - name: cargo test
        run: |
          # cargo build --bin consumer
          # cargo run --bin consumer &
          cargo test --no-fail-fast --verbose -- --nocapture
      - name: remove containers
        run: docker-compose -f docker-compose-dev.yml down && sudo rm -rf data    

  cargo-coverage-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly-2021-11-18
            override: true
            components: rustfmt, clippy
      - name: deal with rust cache
        uses: Swatinem/rust-cache@v1
        with:
          working-directory: backend
      - name: Add containers
        run: docker-compose -f docker-compose-dev.yml up -d
      - name: run backend consumer
        run: |
          cargo install cargo-tarpaulin
      - name: Generate code coverage
        run: |
          cargo install cargo-tarpaulin
          # cargo tarpaulin --all-features --no-run --skip-clean --no-fail-fast --verbose --timeout 300 --out Xml
          # ./target/debug/consumer &
          cargo tarpaulin --all-features --no-fail-fast --skip-clean --verbose --timeout 300 --out Xml
      - name: remove containers
        run: docker-compose -f docker-compose-dev.yml down && sudo rm -rf data    
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v2
        if: ${{ success() }}
        with:
          directory: backend
